{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-09-26T01:10:49.449877+00:00",
  "repo": "tireddy2/pqc_uta",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 5,
      "id": "I_kwDOKcY3I850q8ab",
      "title": "Discuss CSR, ACME and CMP.",
      "url": "https://github.com/tireddy2/pqc_uta/issues/5",
      "state": "OPEN",
      "author": "tireddy2",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "@OR13 I think it would be worth teasing apart the CA / signing issues with CRQCs from the encryption ones, perhaps a diagram or 2 could help here.",
      "createdAt": "2023-10-23T15:14:32Z",
      "updatedAt": "2023-10-23T15:14:32Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 8,
      "id": "I_kwDOKcY3I850ygbh",
      "title": "Mixed use of \"hybrid\" and \"PQ/T\"",
      "url": "https://github.com/tireddy2/pqc_uta/issues/8",
      "state": "CLOSED",
      "author": "thomwiggers",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "E.g. section \"Authentication\" uses PQ/T, but the section on data confidentiality only uses \"hybrid\"",
      "createdAt": "2023-10-24T14:30:55Z",
      "updatedAt": "2023-10-25T07:57:37Z",
      "closedAt": "2023-10-25T07:57:37Z",
      "comments": [
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "Thanks, fixed in multiple places. The term \"\"Hybrid\" key exchange\" is defined in the terminology section. ",
          "createdAt": "2023-10-25T07:57:33Z",
          "updatedAt": "2023-10-25T07:57:33Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOKcY3I850yhO5",
      "title": "\"Applications MUST use TLS 1.3\"",
      "url": "https://github.com/tireddy2/pqc_uta/issues/9",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Can UTA make such bold requirements?",
      "createdAt": "2023-10-24T14:32:24Z",
      "updatedAt": "2023-10-25T08:06:42Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "I see UTA WG documents providing such requirements, for example, see https://datatracker.ietf.org/doc/rfc9325/ and https://datatracker.ietf.org/doc/draft-ietf-uta-tls13-iot-profile/. I modified the text as follows:\r\nApplications that use (D)TLS and susceptible to CRQC attack MUST migrate to (D)TLS 1.3 and support the hybrid key exchange, as defined in {{!I-D.ietf-tls-hybrid-design}}.",
          "createdAt": "2023-10-25T08:06:42Z",
          "updatedAt": "2023-10-25T08:06:42Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOKcY3I850yogo",
      "title": "TLS alert mechanisms",
      "url": "https://github.com/tireddy2/pqc_uta/issues/10",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If the TLS server is not happy with pre-quantum algorithms, then it should simply send the `\"insufficient_security\" alert` defined in  RFC 8446 and terminate the connection. Otherwise you're still establishing a TLS connection with bad security, which seems like the kind of thing that we got rid of when browsers stopped letting you just click through the \"bad certificate\" warnings.",
      "createdAt": "2023-10-24T14:44:25Z",
      "updatedAt": "2023-10-25T09:12:58Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "Good point. Modified text as follows:\r\nWhen the server detects that the client doesn't support PQC or hybrid key exchange, it can send an 'insufficient_security' fatal alert to the client. The client can inform the end-users that the server they are trying to access requires a level of security that the client cannot provide due to the lack of PQC support. Furthermore, the client may log the event for diagnostic and security auditing purposes and report the security-related issue to the client development team.",
          "createdAt": "2023-10-25T08:51:20Z",
          "updatedAt": "2023-10-25T09:12:58Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOKcY3I850yqrP",
      "title": "Only HPKE authenticated mode requires NIKE",
      "url": "https://github.com/tireddy2/pqc_uta/issues/11",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The unauthenticated HPKE modes have been defined using KEM primitives, and it's very easy to slot post-quantum KEM into them. The authenticated modes require AKEM or NIKE primitives, for which we don't really have good solutions right now.",
      "createdAt": "2023-10-24T14:47:56Z",
      "updatedAt": "2023-10-25T10:51:56Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "Agreed but authenticated HPKE mode is not used by OHAI, ESNI and DNS over Oblivious HTTP.  Do we have to discuss about the optional authenticated HPKE modes ?",
          "createdAt": "2023-10-25T09:29:54Z",
          "updatedAt": "2023-10-25T09:29:54Z"
        },
        {
          "author": "thomwiggers",
          "authorAssociation": "COLLABORATOR",
          "body": "HPKE phrases everything internally already in terms of KEM, not NIKE (even though this is mildly incorrect for the authenticated modes). The current text in this document suggests that HPKE heavily relies on the NIKE nature of DH and that special consideration was needed for the integration of Xyber.",
          "createdAt": "2023-10-25T09:34:42Z",
          "updatedAt": "2023-10-25T09:34:42Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "Yes, my understanding is integration for Kyber requires two full KEM exchanges for the authentication variant in HPKE (as discussed in https://www.ietf.org/archive/id/draft-ietf-pquip-pqc-engineers-02.html#section-10.1.1 (figure 4)).",
          "createdAt": "2023-10-25T10:51:55Z",
          "updatedAt": "2023-10-25T10:51:55Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOKcY3I850ysQX",
      "title": "Why does email not require confidentiality?",
      "url": "https://github.com/tireddy2/pqc_uta/issues/12",
      "state": "OPEN",
      "author": "thomwiggers",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The section on email submission makes a reference to ECH, which I do not understand, but otherwise states that \"`there are no specific recommendations for SUBMISSION beyond {{ech}}\"`. \r\n\r\nHTTPS is fully delved into and has the exact same requirements as email submission: note that email submission also often involves the exchange of authentication tokens or passwords!",
      "createdAt": "2023-10-24T14:51:03Z",
      "updatedAt": "2023-10-27T09:39:25Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "Good point, I missed updating it. Please see updated text below:\r\nTLS support for Email Submission/Access is described in {{Section 3.3 of\r\n?RFC8314}}. The Mail User Agent (MUA) and a Mail Submission Server or Mail Access \r\nServer MUST support the Quantum-Ready usage profile discussed in {#confident}. \r\n",
          "createdAt": "2023-10-25T09:57:30Z",
          "updatedAt": "2023-10-25T09:57:30Z"
        },
        {
          "author": "danwing",
          "authorAssociation": "COLLABORATOR",
          "body": "On Oct 25, 2023, at 2:57\u202fAM, Tirumaleswar Reddy ***@***.***> wrote:\r\n> Good point, I missed updating it. Please see updated text below:\r\n> TLS support for Email Submission/Access is described in {{Section 3.3 of\r\n> ?RFC8314}}. The Mail User Agent (MUA) and a Mail Submission Server or Mail Access\r\n> Server MUST support the Quantum-Ready usage profile discussed in {#confident}.\r\n> \r\n\r\n\r\nIt needs motivation, something like:\r\n\r\n\"Email often contains information that needs protection from passive monitoring or active modification.  While some standards exist for protecting integrity and for encrypting content of messages themselves (see Section X.Y), transport encryption is also frequently used.  Because mail submission by users and mail transfer by mail transmission agents is not nearly as time-constrained as web browsing, there is less need to use hybrid encryption solely for faster connection speed.\"\r\n\r\n\r\nand new section X:\r\n\r\n\r\n\"X.0 Encrypted Data at Rest\r\n\r\nThis section discusses IETF standards that encrypt or authenticate data at rest.\r\n\r\nX.Y. E-Mail Content Authentication and Encryption\r\n\r\nTwo widely-available mechanisms exist which can authenticate and can encrypt email content:  PGP and S/MIME.  They both use classical encryption algorithms and would need extension to support post-quantum crypto.\r\n\r\nX.Z. DNSSEC\r\n\r\n<<insert smart words here>>\"\r\n\r\n\r\n ",
          "createdAt": "2023-10-25T17:09:33Z",
          "updatedAt": "2023-10-25T17:09:33Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "/> standards exist for protecting integrity and for encrypting content of messages themselves\r\n\r\n\r\n\r\n> On Oct 25, 2023, at 2:57\u202fAM, Tirumaleswar Reddy ***@***.***> wrote: Good point, I missed updating it. Please see updated text below: TLS support for Email Submission/Access is described in {{Section 3.3 of ?RFC8314}}. The Mail User Agent (MUA) and a Mail Submission Server or Mail Access Server MUST support the Quantum-Ready usage profile discussed in {#confident}.\r\n> It needs motivation, something like: \"Email often contains information that needs protection from passive monitoring or active modification. While some standards exist for protecting integrity and for encrypting content of messages themselves (see Section X.Y), transport encryption is also frequently used. \r\n\r\nLooks good, will update draft. \r\n\r\n>Because mail submission by users and mail transfer by mail transmission agents is not nearly as time-constrained as web browsing, there is less need to use hybrid encryption solely for faster connection speed.\" \r\n\r\nI don't get the above line. \r\n\r\n> and new section X: \"X.0 Encrypted Data at Rest This section discusses IETF standards that encrypt or authenticate data at rest. X.Y. E-Mail Content Authentication and Encryption Two widely-available mechanisms exist which can authenticate and can encrypt email content: PGP and S/MIME. They both use classical encryption algorithms and would need extension to support post-quantum crypto. X.Z. DNSSEC <<insert smart words here>>\"\r\n\r\nThe scope of the draft is restricted to Quantum-Ready usage profiles for applications using TLS.\r\n",
          "createdAt": "2023-10-26T06:50:18Z",
          "updatedAt": "2023-10-26T06:50:18Z"
        },
        {
          "author": "danwing",
          "authorAssociation": "COLLABORATOR",
          "body": "\r\n\r\n> On Oct 25, 2023, at 11:50\u202fPM, Tirumaleswar Reddy ***@***.***> wrote:\r\n> \r\n> \r\n> /> standards exist for protecting integrity and for encrypting content of messages themselves\r\n> \r\n> On Oct 25, 2023, at 2:57\u202fAM, Tirumaleswar Reddy @.***> wrote: Good point, I missed updating it. Please see updated text below: TLS support for Email Submission/Access is described in {{Section 3.3 of ?RFC8314}}. The Mail User Agent (MUA) and a Mail Submission Server or Mail Access Server MUST support the Quantum-Ready usage profile discussed in {#confident}.\r\n> It needs motivation, something like: \"Email often contains information that needs protection from passive monitoring or active modification. While some standards exist for protecting integrity and for encrypting content of messages themselves (see Section X.Y), transport encryption is also frequently used.\r\n> \r\n> Looks good, will update draft.\r\n> \r\n> Because mail submission by users and mail transfer by mail transmission agents is not nearly as time-constrained as web browsing, there is less need to use hybrid encryption solely for faster connection speed.\"\r\n> \r\n> I don't get the above line.\r\n> \r\n\r\nTo me, there seem to be two reasons to perform classic+PQ crypto:\r\n\r\n  reason 1:  to avoid a round trip\r\n  reason 2:  to provide Classic crypto security in the event PQ crypto is broken\r\n\r\nThe sentence says Reason 1 isn't necessary for email protocols.\r\n\r\n\r\nIf my reasoning is off, then delete that sentence (\"Because mail submission by users ...\").\r\n\r\n\r\n\r\n> and new section X: \"X.0 Encrypted Data at Rest This section discusses IETF standards that encrypt or authenticate data at rest. X.Y. E-Mail Content Authentication and Encryption Two widely-available mechanisms exist which can authenticate and can encrypt email content: PGP and S/MIME. They both use classical encryption algorithms and would need extension to support post-quantum crypto. X.Z. DNSSEC <>\"\r\n> \r\n> The scope of the draft is restricted to Quantum-Ready usage profiles for applications using TLS.\r\n> \r\nOh.\r\n\r\n-d\r\n\r\n\r\n",
          "createdAt": "2023-10-26T14:59:54Z",
          "updatedAt": "2023-10-26T14:59:54Z"
        },
        {
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "body": "> On Oct 25, 2023, at 11:50\u202fPM, Tirumaleswar Reddy ***@***.***> wrote: /> standards exist for protecting integrity and for encrypting content of messages themselves On Oct 25, 2023, at 2:57\u202fAM, Tirumaleswar Reddy @.***> wrote: Good point, I missed updating it. Please see updated text below: TLS support for Email Submission/Access is described in {{Section 3.3 of ?RFC8314}}. The Mail User Agent (MUA) and a Mail Submission Server or Mail Access Server MUST support the Quantum-Ready usage profile discussed in {#confident}. It needs motivation, something like: \"Email often contains information that needs protection from passive monitoring or active modification. While some standards exist for protecting integrity and for encrypting content of messages themselves (see Section X.Y), transport encryption is also frequently used. Looks good, will update draft. Because mail submission by users and mail transfer by mail transmission agents is not nearly as time-constrained as web browsing, there is less need to use hybrid encryption solely for faster connection speed.\" I don't get the above line.\r\n> To me, there seem to be two reasons to perform classic+PQ crypto: reason 1: to avoid a round trip reason 2: to provide Classic crypto security in the event PQ crypto is broken The sentence says Reason 1 isn't necessary for email protocols. If my reasoning is off, then delete that sentence (\"Because mail submission by users ...\").\r\n\r\nRemoved the line, the primary motivation of hybrid is reason 2. Are you referring to additional round-trip introduced by https://datatracker.ietf.org/doc/draft-celi-wiggers-tls-authkem/ ?\r\n\r\n> and new section X: \"X.0 Encrypted Data at Rest This section discusses IETF standards that encrypt or authenticate data at rest. X.Y. E-Mail Content Authentication and Encryption Two widely-available mechanisms exist which can authenticate and can encrypt email content: PGP and S/MIME. They both use classical encryption algorithms and would need extension to support post-quantum crypto. X.Z. DNSSEC <>\" The scope of the draft is restricted to Quantum-Ready usage profiles for applications using TLS.\r\n> Oh.\r\n> [\u2026](#)\r\n> -d\r\n\r\n",
          "createdAt": "2023-10-27T09:39:25Z",
          "updatedAt": "2023-10-27T09:39:25Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOKcY3I85cVA3C",
      "title": "expanded scope, but this is mostly a table of contents",
      "url": "https://github.com/tireddy2/pqc_uta/pull/1",
      "state": "OPEN",
      "author": "danwing",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-10T04:34:52Z",
      "updatedAt": "2023-10-10T04:34:52Z",
      "baseRepository": "tireddy2/pqc_uta",
      "baseRefName": "main",
      "baseRefOid": "630ba048f7d3aa23cc0e710547ac7775e6bc9a05",
      "headRepository": "tireddy2/pqc_uta",
      "headRefName": "expand-scope",
      "headRefOid": "c29804a54755fac3830b550a9c61c8403002eb66",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOKcY3I85cr0f8",
      "title": "re-focus text to discuss specifics of moving to PQ for each protocol,\u2026",
      "url": "https://github.com/tireddy2/pqc_uta/pull/2",
      "state": "OPEN",
      "author": "danwing",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026 less on why-PQ-is-great",
      "createdAt": "2023-10-12T23:05:11Z",
      "updatedAt": "2023-10-12T23:05:11Z",
      "baseRepository": "tireddy2/pqc_uta",
      "baseRefName": "main",
      "baseRefOid": "b798afb31b9aadd11e77b06aea8154c87e9961d9",
      "headRepository": "tireddy2/pqc_uta",
      "headRefName": "reduce_redundancy",
      "headRefOid": "14831f80f6021678a707ea6b3e696eb7f4f62b6c",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOKcY3I85dSFpT",
      "title": "Mike edits",
      "url": "https://github.com/tireddy2/pqc_uta/pull/3",
      "state": "MERGED",
      "author": "ounsworth",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-19T14:28:42Z",
      "updatedAt": "2023-10-20T07:40:25Z",
      "baseRepository": "tireddy2/pqc_uta",
      "baseRefName": "main",
      "baseRefOid": "e29f844aca87cc610470fd77583c46b3874a5803",
      "headRepository": "tireddy2/pqc_uta",
      "headRefName": "mike_edits",
      "headRefOid": "d61383af835050b0ad41625a06139b7983f4ce48",
      "closedAt": "2023-10-20T06:08:07Z",
      "mergedAt": "2023-10-20T06:08:07Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "56a54e94bcd1088ee65a40b83db3d8bc9a54a0fa"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKcY3I85km5vj",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "auriee",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T14:35:35Z",
          "updatedAt": "2023-10-19T14:35:35Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "*ECDH",
              "createdAt": "2023-10-19T14:35:35Z",
              "updatedAt": "2023-10-19T14:35:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKcY3I85km6Kh",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "auriee",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T14:36:18Z",
          "updatedAt": "2023-10-19T14:36:18Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "Are we going ahead with name change widely from Kyber, Dilithium, etc. to ML-KEM, DSA etc.",
              "createdAt": "2023-10-19T14:36:18Z",
              "updatedAt": "2023-10-19T14:36:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKcY3I85km6fc",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "auriee",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T14:36:49Z",
          "updatedAt": "2023-10-19T14:36:49Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "*equipped",
              "createdAt": "2023-10-19T14:36:49Z",
              "updatedAt": "2023-10-19T14:36:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKcY3I85km69G",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "auriee",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-19T14:37:36Z",
          "updatedAt": "2023-10-19T14:37:36Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "Name change discussion as above.",
              "createdAt": "2023-10-19T14:37:36Z",
              "updatedAt": "2023-10-19T14:37:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKcY3I85km7b1",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "auriee",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Some minor typos and comments. Thanks Mike.",
          "createdAt": "2023-10-19T14:38:16Z",
          "updatedAt": "2023-10-19T14:38:16Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKcY3I85ksK5y",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-20T06:08:00Z",
          "updatedAt": "2023-10-20T06:08:00Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOKcY3I85ksqkd",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T07:40:16Z",
          "updatedAt": "2023-10-20T07:40:16Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Fixed",
              "createdAt": "2023-10-20T07:40:16Z",
              "updatedAt": "2023-10-20T07:40:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOKcY3I85ksqoB",
          "commit": {
            "abbreviatedOid": "d61383a"
          },
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-10-20T07:40:25Z",
          "updatedAt": "2023-10-20T07:40:25Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Fixed",
              "createdAt": "2023-10-20T07:40:25Z",
              "updatedAt": "2023-10-20T07:40:26Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOKcY3I85dhV-r",
      "title": "Add files via upload",
      "url": "https://github.com/tireddy2/pqc_uta/pull/4",
      "state": "MERGED",
      "author": "auriee",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T11:52:45Z",
      "updatedAt": "2023-10-23T11:56:05Z",
      "baseRepository": "tireddy2/pqc_uta",
      "baseRefName": "main",
      "baseRefOid": "8363914ddddb80a2c1aea39a9dee5f72bbd86a6f",
      "headRepository": "tireddy2/pqc_uta",
      "headRefName": "ari-patch-1",
      "headRefOid": "234741c51947069793e620b95fcdcbe4819efb69",
      "closedAt": "2023-10-23T11:56:05Z",
      "mergedAt": "2023-10-23T11:56:05Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "88ebfe817c5789fb3bce87bb5e6bc5b6cc1466ea"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKcY3I85k3zQQ",
          "commit": {
            "abbreviatedOid": "234741c"
          },
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-23T11:55:58Z",
          "updatedAt": "2023-10-23T11:55:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOKcY3I85djBY9",
      "title": "remove word 'trust' where it was too overloaded",
      "url": "https://github.com/tireddy2/pqc_uta/pull/6",
      "state": "MERGED",
      "author": "danwing",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-23T15:48:43Z",
      "updatedAt": "2023-10-24T01:20:02Z",
      "baseRepository": "tireddy2/pqc_uta",
      "baseRefName": "main",
      "baseRefOid": "7fbca91b125a600eafe0da03259464814cdf4802",
      "headRepository": "tireddy2/pqc_uta",
      "headRefName": "remove_word_trust",
      "headRefOid": "3100763359349fd7ffabde93007d16e0420e0e86",
      "closedAt": "2023-10-24T01:20:02Z",
      "mergedAt": "2023-10-24T01:20:02Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "09ebbff2898d59502227cc0bba363ced150b7828"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKcY3I85k9Qr7",
          "commit": {
            "abbreviatedOid": "3100763"
          },
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-24T01:19:56Z",
          "updatedAt": "2023-10-24T01:19:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOKcY3I85dpW0E",
      "title": "Add the IETF plumbing",
      "url": "https://github.com/tireddy2/pqc_uta/pull/7",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Setup repository for draft-reddy-uta-pqc-app using https://github.com/martinthomson/i-d-template",
      "createdAt": "2023-10-24T14:12:33Z",
      "updatedAt": "2023-10-25T07:18:56Z",
      "baseRepository": "tireddy2/pqc_uta",
      "baseRefName": "main",
      "baseRefOid": "09ebbff2898d59502227cc0bba363ced150b7828",
      "headRepository": "tireddy2/pqc_uta",
      "headRefName": "add-plumbing",
      "headRefOid": "763e6e490be8f3c94d0acbac20c057d9fb52cf58",
      "closedAt": "2023-10-25T07:18:56Z",
      "mergedAt": "2023-10-25T07:18:56Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "9a0c0979bdb6e41b3dd0412d082590e078297a08"
      },
      "comments": [
        {
          "author": "thomwiggers",
          "authorAssociation": "COLLABORATOR",
          "body": "the build failing might require some more setup of permissions\r\n\r\n>Allow GitHub Workflows to make changes to the repository. Click the gear icon to open the settings for your repo, then select Actions > General in the list on the left. Under \"Workflow permissions\", select \"Read and write permissions\".\r\n\r\nhttps://github.com/martinthomson/i-d-template/blob/main/doc/TEMPLATE.md",
          "createdAt": "2023-10-24T14:55:16Z",
          "updatedAt": "2023-10-24T14:55:16Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 13,
      "id": "PR_kwDOKcY3I85dpr_L",
      "title": "Avoid stating that PQ algorithms are insecure, other minor improvements",
      "url": "https://github.com/tireddy2/pqc_uta/pull/13",
      "state": "MERGED",
      "author": "thomwiggers",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-24T14:53:45Z",
      "updatedAt": "2023-10-25T07:31:33Z",
      "baseRepository": "tireddy2/pqc_uta",
      "baseRefName": "main",
      "baseRefOid": "09ebbff2898d59502227cc0bba363ced150b7828",
      "headRepository": "tireddy2/pqc_uta",
      "headRefName": "thom-edit",
      "headRefOid": "7a26188ad0eb01497462e5d3d23a4aa7128b154f",
      "closedAt": "2023-10-25T07:31:32Z",
      "mergedAt": "2023-10-25T07:31:32Z",
      "mergedBy": "tireddy2",
      "mergeCommit": {
        "oid": "3bb4413937ee48522e2142bf41025b7de6f4525a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOKcY3I85lH4nd",
          "commit": {
            "abbreviatedOid": "7a26188"
          },
          "author": "tireddy2",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-25T07:31:27Z",
          "updatedAt": "2023-10-25T07:31:27Z",
          "comments": []
        }
      ]
    }
  ]
}